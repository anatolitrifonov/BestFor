@model BestFor.Dto.MyContentDto
@using BestFor.Services
@* Inject the service that generates anti forgery keys *@
@inject Microsoft.AspNet.Antiforgery.IAntiforgery Xsrf
@* Inject the service that allows searching for localized strings *@
@inject BestFor.Services.Services.IResourcesService resourcesService
@functions
{
    // Generate the token that we will use in requests sending data to server in headers.
    public string GetAntiXsrfToken()
    {
        var tokens = Xsrf.GetTokens(Context);
        return tokens.CookieToken + ":" + tokens.FormToken;
    }
}
<br /><br /><br />
@{
    // Read localized strings
    string addDescription = resourcesService.GetString(this.ViewBag.BestForCulture, "add_description");
    string answerDetails = resourcesService.GetString(this.ViewBag.BestForCulture, "answer_details");
}
@LinkingHelper.ConvertAnswerToText(Model.CommonStrings, Model.Answer)
<br /><br />
@Html.ActionLink(addDescription, "AddDescription", "AnswerAction", new { answerId = Model.Answer.Id })
<br /><br />
@Html.ActionLink(answerDetails, "ShowAnswer", "AnswerAction", new { answerId = Model.Answer.Id })
<br />
This is my content<br />
Shows:answer text, link to add description, link to show answer. <br />
We need to show affiliate link here <br />
Couple of choices. First one if async load on the view or react js.
Let's go with react.<br />
@Html.React("AffiliateProductDetails",
        new
        {
            productsUrl = "/api/product",
            productKeyword = "fishing",
            antiForgeryHeaderName = BestFor.Controllers.BaseApiController.ANTI_FORGERY_HEADER_NAME,
            antiForgeryToken = GetAntiXsrfToken(),
            resourceStrings = resourcesService.GetStringsAsJson(this.ViewBag.BestForCulture,
                new string[]
                {
                    "suggestion_panel_initial_message",
                    "suggestion_panel_no_answers_found",
                    "suggestion_panel_x_answers_found",
                    "suggestion_panel_error_happened_searching_answers",
                    "suggestion_panel_you_were_the_first",
                    "best_start_capital",
                    "for_lower",
                    "is_lower",
                    "suggestion_panel_your_answer",
                    "suggestion_panel_was_added",
                    "suggestion_panel_this_answer_was_given",
                    "times_lower",
                    "suggestion_panel_extended_opinion",
                    "add_capital"
                })
        })
@* Load react client scripts *@
@section TopScripts {
    @{ await Html.RenderPartialAsync("_ReactJsScriptsPartial"); }
}
@* Load this page specific react sripts *@
<script src="@Url.Content("~/Scripts/AffiliateProductDetails.jsx")"></script>
@Html.ReactInitJavaScript()




