@model BestFor.Dto.AnswersDto
@using BestFor.Services
@* Inject the service that allows searching for localized strings *@
@inject BestFor.Services.Services.IResourcesService resourcesService
@{
    string helpOthersString = await resourcesService.GetString(this.ViewBag.BestForCulture, "help_others");
    string addYourOpinionString = await resourcesService.GetString(this.ViewBag.BestForCulture, "add_your_opinion");

    // Screw all ... take the latest answer and use as title

    if (Model != null && Model.Answers != null && Model.Answers.Count() > 0)
    {
        var answer = Model.Answers.OrderByDescending(x => x.DateAdded).First();
        ViewData["Title"] = LinkingHelper.ConvertAnswerToText(await resourcesService.GetCommonStrings(this.ViewBag.BestForCulture), answer);
    }
    else
    {
        string searchResultsString = await resourcesService.GetString(this.ViewBag.BestForCulture, "search_results_for");
        ViewData["Title"] = searchResultsString + " " + (await resourcesService.GetCommonStrings(this.ViewBag.BestForCulture)).For +
            " " + Model.SearchKeyword;
    }
}
<h1>@ViewData["Title"]</h1>
@helpOthersString <yakor y-culture="@this.ViewBag.BestForCulture" y-controller="Home" y-action="Contribute">@addYourOpinionString</yakor>
<div class="row">
    <div class="col-md-offset-2 col-md-8">
        <div class="best-div-fluid">
            @foreach (var item in Model.Answers)
            {
                if (Model.IsLeft)
                {
                    @Html.DisplayFor(x => item, "AnswerSearchResultLeftEntry")
                }
                else
                {
                    @Html.DisplayFor(x => item, "AnswerSearchResultRightEntry")
                }
            }
        </div>
    </div>
</div>
